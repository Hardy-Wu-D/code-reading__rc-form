{"version":3,"sources":["webpack:///./examples/styles.js","webpack:///./node_modules/_antd@3.26.20@antd/dist/antd.css?b74a","webpack:///./examples/normalize.js"],"names":["regionStyle","border","marginTop","padding","errorStyle","color","CustomInput","state","checkUpper","rule","value","callback","toUpperCase","Error","toUpper","v","prev","props","form","getFieldProps","getFieldError","errors","normalize","rules","validator","join","React","Component","propTypes","formShape","MaxMin","normalizeMin","prevValue","allValues","console","log","min","max","previousAllValues","getFieldsValue","Number","normalizeMax","initialValue","Form","onSubmit","e","preventDefault","validateFields","error","values","margin","NewForm","createForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"examples/normalize.js","sourcesContent":["export const regionStyle = {\n  border: '1px solid red',\n  marginTop: 10,\n  padding: 10,\n};\n\nexport const errorStyle = {\n  color: 'red',\n  marginTop: 10,\n  padding: 10,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./examples/styles.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_antd@3.26.20@antd/dist/antd.css\n// module id = 32\n// module chunks = 0 1 2 3 5 8 9","/* eslint react/no-multi-comp:0, no-console:0 */\n\nimport { createForm, formShape } from 'rc-form';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { regionStyle, errorStyle } from './styles';\n\nclass CustomInput extends React.Component {\n  static propTypes = {\n    form: formShape,\n  };\n  state = {};\n  checkUpper = (rule, value, callback) => {\n    if (value !== value.toUpperCase()) {\n      callback(new Error('need to be upper!'));\n    } else {\n      callback();\n    }\n  }\n  toUpper = (v, prev) => {\n    if (v === prev) {\n      return v;\n    }\n    return v.toUpperCase();\n  }\n  render() {\n    const { getFieldProps, getFieldError } = this.props.form;\n    const errors = getFieldError('upper');\n    return (<div style={ regionStyle }>\n      <div>upper normalize</div>\n      <div>\n        <input {...getFieldProps('upper', {\n          normalize: this.toUpper,\n          rules: [{\n            validator: this.checkUpper,\n          }],\n        })}\n        />\n      </div>\n      <div style={errorStyle}>\n        {(errors) ? errors.join(',') : null}\n      </div>\n    </div>);\n  }\n}\n\nclass MaxMin extends React.Component {\n  static propTypes = {\n    form: formShape,\n  };\n  normalizeMin = (value, prevValue, allValues) => {\n    console.log('normalizeMin', allValues.min, allValues.max);\n    const previousAllValues = this.props.form.getFieldsValue();\n    if (allValues.max !== previousAllValues.max) {\n      // max changed\n      if (value === '' || Number(allValues.max) < Number(value)) {\n        return allValues.max;\n      }\n    }\n    return value;\n  }\n  normalizeMax = (value, prevValue, allValues) => {\n    console.log('normalizeMax', allValues.min, allValues.max);\n    const previousAllValues = this.props.form.getFieldsValue();\n    if (allValues.min !== previousAllValues.min) {\n      // min changed\n      if (value === '' || Number(allValues.min) > Number(value)) {\n        return allValues.min;\n      }\n    }\n    return value;\n  }\n  render() {\n    const { getFieldProps } = this.props.form;\n    return (<div style={ regionStyle }>\n      <div>min: <select\n        {...getFieldProps('min', {\n          normalize: this.normalizeMin,\n          initialValue: '',\n        })}\n      >\n        <option value=\"\">empty</option>\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n      </div>\n      <div>max: <select\n        {...getFieldProps('max', {\n          initialValue: '',\n          normalize: this.normalizeMax,\n        })}\n      >\n        <option value=\"\">empty</option>\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n      </div>\n    </div>);\n  }\n}\n\nclass Form extends Component {\n  static propTypes = {\n    form: formShape,\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((error, values) => {\n      if (!error) {\n        console.log('ok', values);\n      } else {\n        console.log('error', error, values);\n      }\n    });\n  }\n\n  render() {\n    const { form } = this.props;\n    return (<div style={{ margin: 20 }}>\n      <h2>normalize</h2>\n      <form onSubmit={this.onSubmit}>\n        <CustomInput form={ form }/>\n\n        <MaxMin form={ form }/>\n\n        <div style={ regionStyle }>\n          <button>submit</button>\n        </div>\n      </form>\n    </div>);\n  }\n}\n\nconst NewForm = createForm()(Form);\n\nReactDOM.render(<NewForm />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/normalize.js"],"sourceRoot":""}